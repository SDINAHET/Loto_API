from pymongo import MongoClient
import pandas as pd
import numpy as np
from collections import Counter

# Connexion √† MongoDB
try:
    client = MongoClient("mongodb://localhost:27017/")
    db = client["loto_database"]
    collection = db["historique"]
    print("‚úÖ Connexion MongoDB r√©ussie")
except Exception as e:
    print(f"‚ùå Erreur de connexion √† MongoDB : {e}")
    exit()

# R√©cup√©ration des tirages
tirages = list(collection.find({}, {"boule1": 1, "boule2": 1, "boule3": 1, "boule4": 1, "boule5": 1, "numeroChance": 1, "_id": 0}))

# V√©rification des donn√©es
if not tirages:
    print("‚ùå Aucune donn√©e trouv√©e dans la collection.")
    exit()

# Transformation en DataFrame
df = pd.DataFrame(tirages)

# V√©rification de la structure du DataFrame
if df.empty:
    print("‚ùå Le DataFrame est vide. V√©rifie tes donn√©es MongoDB.")
    exit()

# Calcul des fr√©quences des num√©ros principaux
all_numbers = df[["boule1", "boule2", "boule3", "boule4", "boule5"]].values.flatten()
number_counts = Counter(all_numbers)

# Calcul des fr√©quences du num√©ro chance
chance_counts = Counter(df["numeroChance"])

# S√©lection des 5 num√©ros les plus fr√©quents
probable_numbers = [int(num) for num, count in number_counts.most_common(5)]
probable_chance = int(max(chance_counts, key=chance_counts.get))

# Calcul des √©carts-types (avec conversion et cl√©s en string)
std_dev_numbers = {
    str(int(num)): float(np.std(
        [tirage[col] for tirage in tirages for col in ["boule1", "boule2", "boule3", "boule4", "boule5"] if tirage[col] == num]
    )) for num in probable_numbers
}

std_dev_chance = float(np.std(df["numeroChance"]))

# Mise √† jour des pr√©visions dans MongoDB
prediction = {
    "probable_numbers": probable_numbers,
    "probable_chance": probable_chance,
    "std_dev_numbers": std_dev_numbers,  # ‚úÖ Les cl√©s sont maintenant en string
    "std_dev_chance": std_dev_chance
}

# Insertion / Mise √† jour
db["predictions"].update_one({}, {"$set": prediction}, upsert=True)

# Affichage des r√©sultats
print(f"üìä Num√©ros probables : {probable_numbers}")
print(f"üéØ Num√©ro chance probable : {probable_chance}")
print(f"üìà √âcarts-types des num√©ros : {std_dev_numbers}")
print(f"üìä √âcart-type du num√©ro chance : {std_dev_chance:.2f}")
