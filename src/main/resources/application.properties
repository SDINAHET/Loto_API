spring.application.name=LotoAPI
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# # spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# # spring.h2.console.enabled=true
# spring.flyway.enabled=false
# spring.datasource.url=jdbc:mysql://localhost:3306/loto_db?useSSL=false&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=2305
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.data.mongodb.uri=mongodb://localhost:27017/historique_db
# Configuration de MySQL
# spring.datasource.url=jdbc:mysql://localhost:3306/loto_db
# spring.datasource.username=root
# spring.datasource.password=2305
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.sql.init.mode=always

# Configuration de la base de données MySQL
# spring.datasource.url=jdbc:mysql://127.0.0.1:3306/loto_db?useSSL=false&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=2305
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# # Configuration JPA
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update  # "create" si tu veux recréer les tables, "update" pour les conserver
# spring.sql.init.mode=always  # Permet d'exécuter des scripts SQL au démarrage
